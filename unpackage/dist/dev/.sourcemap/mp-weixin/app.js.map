{"version":3,"file":"app.js","sources":["App.vue"],"sourcesContent":["<script>\r\nimport { mapMutations } from 'vuex'\r\n\r\nexport default {\r\n\tonLaunch: function() {\r\n\t\tconsole.log('App Launch')\r\n\t\t// 检查登录状态\r\n\t\tthis.checkLoginStatus()\r\n\t},\r\n\tonShow: function() {\r\n\t\tconsole.log('App Show')\r\n\t},\r\n\tonHide: function() {\r\n\t\tconsole.log('App Hide')\r\n\t},\r\n\tmethods: {\r\n\t\t...mapMutations(['setUserInfo', 'setIsLoggedIn', 'logout', 'setToken']),\r\n\t\tcheckLoginStatus() {\r\n\t\t\tconst token = uni.getStorageSync('access_token')\r\n\t\t\tconst userInfo = uni.getStorageSync('user_info')\r\n\t\t\t\r\n\t\t\tif (token && userInfo) {\r\n\t\t\t\t// 更新全局状态\r\n\t\t\t\tthis.$store.commit('setUserInfo', userInfo)\r\n\t\t\t\tthis.$store.commit('setIsLoggedIn', true)\r\n\t\t\t\tthis.$store.commit('setToken', token)\r\n\t\t\t} else {\r\n\t\t\t\t// 未登录状态\r\n\t\t\t\tthis.$store.commit('setIsLoggedIn', false)\r\n\t\t\t\tthis.$store.commit('setUserInfo', null)\r\n\t\t\t\tthis.$store.commit('setToken', null)\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync validateToken(token) {\r\n\t\t\ttry {\r\n\t\t\t\tconsole.log('开始验证token')\r\n\t\t\t\tconst response = await uni.request({\r\n\t\t\t\t\turl: 'http://localhost:8000/api/user/profile/',\r\n\t\t\t\t\tmethod: 'GET',\r\n\t\t\t\t\theader: {\r\n\t\t\t\t\t\t'Authorization': `Bearer ${token}`,\r\n\t\t\t\t\t\t'Accept': 'application/json',\r\n\t\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttimeout: 5000,\r\n\t\t\t\t\twithCredentials: true\r\n\t\t\t\t})\r\n\t\t\t\t\r\n\t\t\t\tconsole.log('token验证响应状态码:', response.statusCode)\r\n\t\t\t\t\r\n\t\t\t\tif (response.statusCode === 200) {\r\n\t\t\t\t\tconsole.log('token验证成功')\r\n\t\t\t\t\t// token有效，更新用户信息\r\n\t\t\t\t\tthis.setUserInfo(response.data)\r\n\t\t\t\t\treturn true\r\n\t\t\t\t} else if (response.statusCode === 401) {\r\n\t\t\t\t\tconsole.log('token已过期，尝试刷新')\r\n\t\t\t\t\t// token过期，尝试刷新\r\n\t\t\t\t\treturn await this.refreshToken()\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log('token验证失败，状态码:', response.statusCode)\r\n\t\t\t\t\t// 其他错误，清除登录状态\r\n\t\t\t\t\tthis.clearLoginState()\r\n\t\t\t\t\treturn false\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error('验证token失败:', error)\r\n\t\t\t\t// 网络错误，不清除登录状态，让用户继续使用\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync refreshToken() {\r\n\t\t\ttry {\r\n\t\t\t\tconsole.log('开始刷新token')\r\n\t\t\t\tconst refreshToken = uni.getStorageSync('refresh_token')\r\n\t\t\t\tif (!refreshToken) {\r\n\t\t\t\t\tconsole.log('未找到refresh_token')\r\n\t\t\t\t\tthis.clearLoginState()\r\n\t\t\t\t\treturn false\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst response = await uni.request({\r\n\t\t\t\t\turl: 'http://localhost:8000/api/user/token/refresh/',\r\n\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\theader: {\r\n\t\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\t\t'Accept': 'application/json'\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\trefresh: refreshToken\r\n\t\t\t\t\t},\r\n\t\t\t\t\twithCredentials: true\r\n\t\t\t\t})\r\n\t\t\t\t\r\n\t\t\t\tconsole.log('token刷新响应状态码:', response.statusCode)\r\n\t\t\t\t\r\n\t\t\t\tif (response.statusCode === 200) {\r\n\t\t\t\t\tconsole.log('token刷新成功')\r\n\t\t\t\t\t// 刷新成功，更新token\r\n\t\t\t\t\tconst newToken = response.data.access\r\n\t\t\t\t\tthis.setToken(newToken)\r\n\t\t\t\t\tuni.setStorageSync('access_token', newToken)\r\n\t\t\t\t\treturn true\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log('token刷新失败，状态码:', response.statusCode)\r\n\t\t\t\t\tthis.clearLoginState()\r\n\t\t\t\t\treturn false\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error('刷新token失败:', error)\r\n\t\t\t\tthis.clearLoginState()\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t},\r\n\t\tclearLoginState() {\r\n\t\t\tconsole.log('清除登录状态')\r\n\t\t\tthis.logout()\r\n\t\t\tuni.removeStorageSync('access_token')\r\n\t\t\tuni.removeStorageSync('refresh_token')\r\n\t\t\tuni.removeStorageSync('user_info')\r\n\t\t\tuni.removeStorageSync('user_profile')\r\n\t\t\tconsole.log('登录状态已清除')\r\n\t\t}\r\n\t}\r\n}\r\n</script>\r\n\r\n<style>\r\n\t/*每个页面公共css */\r\n</style>\r\n"],"names":["uni","mapMutations"],"mappings":"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"}